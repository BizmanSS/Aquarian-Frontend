import React, { useState, useEffect, useMemo, useRef } from "react";
import "../../../styles/LatestNews.css";
import { FaArrowRightLong } from "react-icons/fa6";
import Averaged from "../../../Assets/News/average scores accepted.png";
import Right from "../../../Assets/News/application fee hiked.png";
import Working from "../../../Assets/News/working hours increased.png";
import Changes from "../../../Assets/News/processing time and backlog.jpg";
import FrenchImg from "../../../Assets/News/french proficiency.png";
import Major from "../../../Assets/News/Major provinces issue PNP invitations.jpg";
import Top10side from "../../../Assets/Blogs/TOP 10 UNIVERSITIESside.jpg";
import WhatIsCategoryside from "../../../Assets/Blogs/Category Based Selectionside.jpg";
import TopInside from "../../../Assets/Blogs/Top In Demand Jobsside.jpg";
import { useMobile } from "../../globalComponents/MobileContext/IsMobileContext";
import BannerPages from "../Banner/BannerPages";

const LatestNews = () => {
  const [showBackToTop, setShowBackToTop] = useState(false);
  const bubbleRef = useRef();
  const [short, setShort] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("All Categories");
  const [currentPage, setCurrentPage] = useState(1);
  const [searchNews, setSearchNews] = useState("");
  const newsPerPage = 5; // Adjust as needed
  const blogContainerRef = useRef(null);

  const { isMobile, vw } = useMobile();
  const handleChange = (event) => {
    setShort(event.target.value);
  };
  useEffect(() => {
    const handleScroll = () => {
      // Check if the Home > Blogs > Inner Blogs link is visible
      const innerBlogsLink = document.querySelector(".link");
      if (innerBlogsLink) {
        const bounding = innerBlogsLink.getBoundingClientRect();
        if (bounding.top >= 0 && bounding.bottom <= window.innerHeight) {
          setShowBackToTop(false);
        } else {
          setShowBackToTop(true);
        }
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);
  const scrollToTop = () => {
    if (blogContainerRef.current) {
      window.scrollTo({
        top: blogContainerRef.current.offsetTop,
        behavior: "smooth",
      });
    }
  };
  function useIsInViewport(ref) {
    const [isIntersecting, setIsIntersecting] = useState(false);

    const observer = useMemo(
      () =>
        new IntersectionObserver(([entry]) =>
          setIsIntersecting(entry.isIntersecting)
        ),
      []
    );

    useEffect(() => {
      observer.observe(ref.current);

      return () => {
        observer.disconnect();
      };
    }, [ref, observer]);

    return isIntersecting;
  }

  const makeDivRelative = useIsInViewport(bubbleRef);

  const newsData = useMemo(
    () => [
      {
        id: 1,
        title: "Major Provinces Issue PNP Invitations",
        description:
          "  Much to the delight of candidates who had applied for PNP in British Columbia, Manitoba and Quebec,",
        image: Major,
        date: "7 JUN. 2024",
        path: "/latest-news/major-provinces-issue-pnp-invitations",
        category: ["Business and Work"],
      },
      {
        id: 2,
        title: "Right of Permanent Resident fee increased",
        description:
          "Canada's right of permanent residence fee (RPRF) has been significantly increased, with a substantial hike of 12%.",
        image: Right,
        date: "30 APR. 2024",
        path: "/latest-news/right-of-permanent-resident-fee-increased",
        category: "Business and Work",
      },
      {
        id: 3,
        title:
          "Averaged Language Scores now Accepted under Express Entry for Disabled Candidates",
        description:
          "Averaged language scores generated by the respective language ",
        image: Averaged,
        date: "29 APR. 2024",
        path: "/latest-news/averaged-language-scores-now-accepted-under-express-entry-for-disabled-candidates",
        category: ["Study", "Business and Work"],
      },

      {
        id: 4,
        title: "Working hours Increased for Students in Canada",
        description:
          "As of April 29th 2024, working hours for students will be increased; for both during academic session and academic breaks.",
        image: Working,
        date: "29 APR. 2024",
        path: "/latest-news/working-hours-increased-for-students-in-canada",
        category: ["Study", "Business and Work"],
      },
      {
        id: 5,
        title: "Changes in Federal Business Programs to tackle Backlog issue",
        description:
          "Changes have been announced to the Start-up visa and Self-Employed Persons programs to manage backlogs ",
        image: Changes,
        date: "29 APR. 2024",
        path: "/latest-news/changes-in-federal-business-programs-to-tackle-backlog-issue",
        category: "Business and Work",
      },
      {
        id: 6,
        title: "French Proficiency Leads Category-Based Selections",
        description:
          "French language proficiency will now be at the forefront of category-based selections in express entry draws in 2024.",
        image: FrenchImg,
        date: "26 APR. 2024",
        path: "/latest-news/french-proficiency-leads-category-based-selection",
        category: ["Study", "Business and Work"],
      },
    ],
    []
  );

  const categories = [
    "All Categories",
    "Express Entry",
    "Business and Work",
    "Study",
    "PNP",
    "Sponsorship",
    "Tourism",
    "Other Essentials",
  ];

  const sortedNewsData = useMemo(() => {
    let sortedData = [...newsData];
    if (short === "new") {
      sortedData.sort((a, b) => new Date(b.date) - new Date(a.date));
    } else if (short === "old") {
      sortedData.sort((a, b) => new Date(a.date) - new Date(b.date));
    } else if (short === "a-z") {
      sortedData.sort((a, b) => a.title.localeCompare(b.title));
    } else if (short === "z-a") {
      sortedData.sort((a, b) => b.title.localeCompare(a.title));
    }
    return sortedData;
  }, [short, newsData]);

  const filteredNews = useMemo(() => {
    const categoryFilteredNews =
      selectedCategory === "All Categories"
        ? sortedNewsData
        : sortedNewsData.filter((news) =>
            Array.isArray(news.category)
              ? news.category.includes(selectedCategory)
              : news.category === selectedCategory
          );

    return categoryFilteredNews.filter(
      (news) =>
        news.title.toLowerCase().includes(searchNews.toLowerCase()) ||
        news.description.toLowerCase().includes(searchNews.toLowerCase())
    );
  }, [selectedCategory, sortedNewsData, searchNews]);

  const totalPages = Math.ceil(filteredNews.length / newsPerPage);

  useEffect(() => {
    setCurrentPage(1);
  }, [selectedCategory]);

  const indexOfLastNews = currentPage * newsPerPage;
  const indexOfFirstNews = indexOfLastNews - newsPerPage;
  const currentnews = filteredNews.slice(indexOfFirstNews, indexOfLastNews);

  const handleCategoryChange = (category) => {
    setSelectedCategory(category);
  };

  // Handle pagination
  const handlePageChange = (page) => {
    setCurrentPage(page);
    setTimeout(() => {
      scrollToTop();
    }, 100);
  };

  // Handle next and previous buttons
  const handleNextPage = () => {
    setCurrentPage(currentPage + 1);
    setTimeout(() => {
      scrollToTop();
    }, 100);
  };

  const handlePreviousPage = () => {
    setCurrentPage(currentPage - 1);
    setTimeout(() => {
      scrollToTop();
    }, 100);
  };

  const news = [
    {
      id: 1,
      title: "Major Provinces Issue PNP Invitations",
      description:
        "  Much to the delight of candidates who had applied for PNP in British Columbia, Manitoba and Quebec,",
      image: Major,
      date: "7 JUN. 2024",
      path: "/latest-news/major-provinces-issue-pnp-invitations",
    },
    {
      id: 2,
      title: "Right of Permanent Resident fee increased",
      description:
        "Canada's right of permanent residence fee (RPRF) has been significantly increased, with a substantial hike of 12%.",
      image: Right,
      date: "30 APR. 2024",
      path: "/latest-news/right-of-permanent-resident-fee-increased",
    },
    {
      id: 3,
      title:
        "Averaged Language Scores now Accepted under Express Entry for Disabled Candidates",
      description:
        "Averaged language scores generated by the respective language ",
      image: Averaged,
      date: "29 APR. 2024",
      path: "/latest-news/averaged-language-scores-now-accepted-under-express-entry-for-disabled-candidates",
    },

    {
      id: 4,
      title: "Working hours Increased for Students in Canada",
      description:
        "As of April 29th 2024, working hours for students will be increased; for both during academic session and academic breaks.",
      image: Working,
      date: "29 APR. 2024",
      path: "/latest-news/working-hours-increased-for-students-in-canada",
    },
  ];

  const recentBlogs = [
    {
      title: "Top 10 Universities in Canada",
      image: Top10side,
      path: "/blogs/top-10-universities-in-canada",
    },
    {
      title: "Top In Demand Jobs in Canada as of 2024",
      image: TopInside,
      path: "/blogs/top-in-demand-jobs-in-canada-as-of-2024",
    },
    {
      title: "What is Category Based Selection? Everything you need to know",
      image: WhatIsCategoryside,
      path: "/blogs/what-is-category-based-selection-everything-you-need-to-know",
    },
  ];
  const RecentBlogs = ({ title, image, path }) => {
    return (
      <div className="post-card-recent">
        <a href={path}>
          <img alt="" src={image} />
        </a>
        <div className="title-recent">
          <a href={path}>
            <h1>{title}</h1>
          </a>
          <p2>
            <a href={path}>Know more{" >"}</a>
          </p2>
        </div>
      </div>
    );
  };

  return (
    <div style={{ background: "#FFF" }}>
      <BannerPages
        link={"latest-news"}
        title={"Newsroom"}
        description={"Welcome to the Newsroom"}
      />

      <div className="mt-10">
        <div class="news-card-container">
          <div className="news-card-upper">
            {news.map((news) => (
              <a key={news.id} href={news.path}>
                <div className="news-upper-card">
                  <img style={{ cursor: "pointer" }} alt="" src={news.image} />
                  <div className="content-card">
                    <div>
                      <p3>{news.date}</p3>

                      <a href={news.path}>
                        <h1>{news.title}</h1>
                      </a>

                      <p2>{news.description} </p2>
                    </div>
                    <a href={news.path}>
                      Read more...{" "}
                      <FaArrowRightLong style={{ alignSelf: "center" }} />
                    </a>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      </div>
      <div className="left-blog">
        {vw > 1250 && (
          <div className="recent-blogs-container">
            <h1 className="title-heading">Recent Blogs</h1>
            <div class="blog-card-container">
              <div className="blog-card-recent">
                {recentBlogs.map((post, index) => (
                  <RecentBlogs key={index} {...post} />
                ))}
              </div>
            </div>
          </div>
        )}
        <div className="news-cards-container">
          <div className="news-container">
            <div className="filter-title">
              <h2 ref={blogContainerRef} id="category-anchor">
                Explore Articles By Category
              </h2>

              <div className="filter-buttons">
                {categories.map((category) => (
                  <button
                    key={category}
                    onClick={() => handleCategoryChange(category)}
                    className={selectedCategory === category ? "active" : ""}
                  >
                    {category}
                  </button>
                ))}
              </div>
            </div>
            <div className="articles-detail">
              <p>Showing {filteredNews.length} Articles</p>
              <div className="sorting">
                <input
                  value={searchNews}
                  type="text"
                  onChange={(e) => setSearchNews(e.target.value)}
                  placeholder={"Search Keywords..."}
                />

                <select value={short} onChange={handleChange} className="">
                  <option value="" disabled>
                    Filter
                  </option>
                  <option value="new">Date (Newest)</option>
                  <option value="old">Date (Oldest)</option>
                  <option value="a-z">A - Z</option>
                  <option value="z-a">Z - A</option>
                </select>
              </div>
            </div>
            {currentnews.length === 0 && (
              <div className="news-cards">
                <h8 className="no-news">No news found!</h8>
              </div>
            )}
            {currentnews.length > 0 && (
              <div className="news-cards">
                {currentnews.map((news) => (
                  <a key={news.id} href={news.path}>
                    <div className="news-upper-card">
                      <img
                        style={{ cursor: "pointer" }}
                        alt=""
                        src={news.image}
                      />
                      <div className="content-card">
                        <div>
                          <p3>{news.date}</p3>
                          {!isMobile && (
                            <>
                              <br />
                              <br />
                            </>
                          )}
                          <a href={news.path}>
                            <h1>{news.title}</h1>
                          </a>
                          {!isMobile && <br />}
                          <p2>{news.description} </p2>
                        </div>
                        <a href={news.path}>
                          Read more...{" "}
                          <FaArrowRightLong style={{ alignSelf: "center" }} />
                        </a>
                      </div>
                    </div>
                  </a>
                ))}
              </div>
            )}
            {filteredNews.length > newsPerPage && (
              <div className="news-pagination">
                <div className="news-perv">
                  <button
                    onClick={() => {
                      handlePreviousPage();
                      const anchor = document.getElementById("category-anchor");
                      anchor.scrollIntoView({
                        behavior: "smooth",
                        block: "start",
                      });
                    }}
                    disabled={currentPage === 1}
                  >
                    {"<<"} Prev
                  </button>
                </div>

                <div className="news-button-pagination">
                  {Array.from(
                    { length: totalPages },
                    (_, index) => index + 1
                  ).map((page) => (
                    <button
                      key={page}
                      onClick={() => {
                        handlePageChange(page);
                        const anchor =
                          document.getElementById("category-anchor");
                        anchor.scrollIntoView({
                          behavior: "smooth",
                          block: "start",
                        });
                      }}
                      className={currentPage === page ? "active" : ""}
                    >
                      {page}
                    </button>
                  ))}
                </div>
                <div className="news-next">
                  <button
                    onClick={() => {
                      handleNextPage();
                      const anchor = document.getElementById("category-anchor");
                      anchor.scrollIntoView({
                        behavior: "smooth",
                        block: "start",
                      });
                    }}
                    disabled={currentPage === totalPages}
                  >
                    Next{" >>"}
                  </button>
                </div>
              </div>
            )}
          </div>
        </div>
        {isMobile && (
          <div className="recent-blogs-container">
            <h1 className="title-heading">Recent Blogs</h1>
            <div class="blog-card-container">
              <div className="blog-card-recent">
                {recentBlogs.map((post, index) => (
                  <RecentBlogs key={index} {...post} />
                ))}
              </div>
            </div>
          </div>
        )}
      </div>

      {showBackToTop && (
        <div
          className={makeDivRelative ? "relativeDiv" : "backToTop"}
          onClick={scrollToTop}
        >
          BACK TO TOP
        </div>
      )}
      <div ref={bubbleRef}></div>
    </div>
  );
};

export default LatestNews;
